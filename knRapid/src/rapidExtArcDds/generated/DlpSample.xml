<?xml version="1.0" encoding="UTF-8"?>
<types xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="/opt/rti/ndds.5.1.0/scripts/../resource/rtiddsgen/schema/rti_dds_topic_types.xsd">
<include file="Message.xml"/>
<module name="rapid">
<module name="ext">
<module name="arc">
<struct name="DlpChannelSample">
<member name="powered" type="boolean"/>
<member name="voltage" type="float"/>
<member name="current" type="float"/>
</struct>
<struct name="DlpBoardSample">
<member name="channels" type="nonBasic" nonBasicTypeName="rapid::ext::arc::DlpChannelSample" arrayDimensions="3"/>
<member name="temp" type="float"/>
</struct>
<typedef name="DlpBoardSampleSequence32" sequenceMaxLength="32" type="nonBasic" nonBasicTypeName="rapid::ext::arc::DlpBoardSample"/>
<directive kind="copyCDeclaration">class DlpSampleTypeSupport;</directive>
<directive kind="copyCDeclaration">class DlpSampleDataWriter;</directive>
<directive kind="copyCDeclaration">class DlpSampleDataReader;</directive>
<directive kind="copyCDeclaration">struct DlpSampleSeq;</directive>
<directive kind="copyDeclaration">/**</directive>
<directive kind="copyDeclaration"> * DlpSample message delivers the position of the Agent. Corresponding DlpConfig sets up the</directive>
<directive kind="copyDeclaration"> * coordinate frame and specifies how the Transform3D.rot field is to be interpreted for pose and velocity.</directive>
<directive kind="copyDeclaration"> */</directive>
<valuetype name="DlpSample" baseClass="rapid::Message" typeModifier="none">
<directive kind="copyCDeclaration">#if RTI_DDS_VERSION_MAJOR &lt; 4 || (RTI_DDS_VERSION_MAJOR == 4  &amp;&amp; RTI_DDS_VERSION_MINOR &lt; 5) || (RTI_DDS_VERSION_MAJOR == 4  &amp;&amp; RTI_DDS_VERSION_MINOR  == 5 &amp;&amp; RTI_DDS_VERSION_RELEASE != 'f' )</directive>
<directive kind="copyCDeclaration">typedef DlpSampleTypeSupport TypeSupport;</directive>
<directive kind="copyCDeclaration">typedef DlpSampleDataWriter DataWriter;</directive>
<directive kind="copyCDeclaration">typedef DlpSampleDataReader DataReader;</directive>
<directive kind="copyCDeclaration">typedef DlpSampleSeq Seq;</directive>
<directive kind="copyCDeclaration">#endif</directive>
<directive kind="copyCDeclaration">typedef DlpSample Type;</directive>
<member name="dlpBoards" type="nonBasic" nonBasicTypeName="rapid::ext::arc::DlpBoardSampleSequence32" visibility="public"/>
</valuetype>
</module>
</module>
</module>
</types>
