<?xml version="1.0" encoding="UTF-8"?>
<types xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="/opt/rti/ndds.5.1.0/scripts/../resource/rtiddsgen/schema/rti_dds_topic_types.xsd">
<include file="Message.xml"/>
<module name="rapid">
<const name="POINTCLOUD_SAMPLE_MAX_POINTS" type="long" value="16384"/>
<directive kind="copyDeclaration">/**</directive>
<directive kind="copyDeclaration"> * PointSample describes the position and attributes of a point in the cloud. Note: Attributes are included</directive>
<directive kind="copyDeclaration"> * in this struct because we get them for free on the wire due to word alignment.</directive>
<directive kind="copyDeclaration"> */</directive>
<struct name="PointSample">
<directive kind="copyDeclaration">/**</directive>
<directive kind="copyDeclaration"> * Position relative to the cloud origin, in arbitrary point units. Reference PointSampleConfig</directive>
<directive kind="copyDeclaration"> * to determine the meaning of the elements in this vector. These are signed short values so</directive>
<directive kind="copyDeclaration"> * in order to exploit the full 16 bits of resolution, data should be scaled to</directive>
<directive kind="copyDeclaration"> * a range of -32768 to 32767. If 15 bits of resolution is adequate, data can be scaled to a</directive>
<directive kind="copyDeclaration"> * range of 0 to 32767 for computational efficiency on the sending side.</directive>
<directive kind="copyDeclaration"> * @see PointSampleXyzMode</directive>
<directive kind="copyDeclaration"> */</directive>
<member name="xyz" type="short" arrayDimensions="3"/>
<directive kind="copyDeclaration">/**</directive>
<directive kind="copyDeclaration"> * Particle attributes (e.g., intensity).</directive>
<directive kind="copyDeclaration"> * @see PointSampleAttributeMode</directive>
<directive kind="copyDeclaration"> */</directive>
<member name="attributes" type="octet" arrayDimensions="2"/>
</struct>
<typedef name="PointSampleSequence" sequenceMaxLength="rapid::POINTCLOUD_SAMPLE_MAX_POINTS" type="nonBasic" nonBasicTypeName="rapid::PointSample"/>
<directive kind="copyCDeclaration">class PointCloudSampleTypeSupport;</directive>
<directive kind="copyCDeclaration">class PointCloudSampleDataWriter;</directive>
<directive kind="copyCDeclaration">class PointCloudSampleDataReader;</directive>
<directive kind="copyCDeclaration">struct PointCloudSampleSeq;</directive>
<directive kind="copyDeclaration">/** PointCloudSample message sends data in point cloud format. */</directive>
<valuetype name="PointCloudSample" baseClass="rapid::Message" typeModifier="none">
<directive kind="copyCDeclaration">#if RTI_DDS_VERSION_MAJOR &lt; 4 || (RTI_DDS_VERSION_MAJOR == 4  &amp;&amp; RTI_DDS_VERSION_MINOR &lt; 5) || (RTI_DDS_VERSION_MAJOR == 4  &amp;&amp; RTI_DDS_VERSION_MINOR  == 5 &amp;&amp; RTI_DDS_VERSION_RELEASE != 'f' )</directive>
<directive kind="copyCDeclaration">typedef PointCloudSampleTypeSupport TypeSupport;</directive>
<directive kind="copyCDeclaration">typedef PointCloudSampleDataWriter DataWriter;</directive>
<directive kind="copyCDeclaration">typedef PointCloudSampleDataReader DataReader;</directive>
<directive kind="copyCDeclaration">typedef PointCloudSampleSeq Seq;</directive>
<directive kind="copyCDeclaration">#endif</directive>
<directive kind="copyCDeclaration">typedef PointCloudSample Type;</directive>
<directive kind="copyDeclaration">/** Origin of points (i.e., offset from frame 0,0,0 in meters). */</directive>
<member name="origin" type="nonBasic" nonBasicTypeName="rapid::Vec3d" visibility="public"/>
<directive kind="copyDeclaration">/**</directive>
<directive kind="copyDeclaration"> * Per-element scale factor to convert point units to a meaningful value. Following conversion,</directive>
<directive kind="copyDeclaration"> * spatial coordinates should be in METERS and angular values should be in RADIANS.</directive>
<directive kind="copyDeclaration"> */</directive>
<member name="xyzScale" type="nonBasic" nonBasicTypeName="rapid::Vec3d" visibility="public"/>
<directive kind="copyDeclaration">/** Sequence of points. */</directive>
<member name="points" type="nonBasic" nonBasicTypeName="rapid::PointSampleSequence" visibility="public"/>
<directive kind="copyDeclaration">/**</directive>
<directive kind="copyDeclaration"> * Descriptions of rows from the same scan-line. If all points belong to the same point cloud,</directive>
<directive kind="copyDeclaration"> *</directive>
<directive kind="copyDeclaration"> * &lt;code&gt;</directive>
<directive kind="copyDeclaration"> * rowLengths.length() == 0 (or rowLengths.length()==1 &amp;&amp; rowLengths[0] == samples.length() )</directive>
<directive kind="copyDeclaration"> * &lt;/code&gt;</directive>
<directive kind="copyDeclaration"> *</directive>
<directive kind="copyDeclaration"> * Otherwise,</directive>
<directive kind="copyDeclaration"> *</directive>
<directive kind="copyDeclaration"> * &lt;code&gt;</directive>
<directive kind="copyDeclaration"> * SUM(rowLengths) == samples.length().</directive>
<directive kind="copyDeclaration"> * &lt;/code&gt;</directive>
<directive kind="copyDeclaration"> */</directive>
<member name="rowLengths" type="nonBasic" nonBasicTypeName="rapid::ShortSequence128" visibility="public"/>
</valuetype>
</module>
</types>
