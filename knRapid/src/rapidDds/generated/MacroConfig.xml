<?xml version="1.0" encoding="UTF-8"?>
<types xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="/opt/rti/ndds.5.1.0/scripts/../resource/rtiddsgen/schema/rti_dds_topic_types.xsd">
<include file="Message.xml"/>
<module name="rapid">
<directive kind="copyDeclaration">/**</directive>
<directive kind="copyDeclaration"> * Command is a message used to send directives to an Agent.</directive>
<directive kind="copyDeclaration"> */</directive>
<struct name="MacroCommand">
<directive kind="copyDeclaration">/** Name of command being sent. Should get this from list of possible commands in CommandConfig. */</directive>
<member name="cmdName" type="nonBasic" nonBasicTypeName="rapid::String64"/>
<directive kind="copyDeclaration">/** Suffix to be appended to the cmdId of the loadMacro Command.</directive>
<directive kind="copyDeclaration"> *  Each cmdIdSuffix within a macro MUST be unique. When the macro is loaded</directive>
<directive kind="copyDeclaration"> *  into the Queue, the cmdId of each command in the Macro will be</directive>
<directive kind="copyDeclaration"> *  &lt;cmdId&gt;-&lt;cmdIdSuffix&gt; where cmdId is the command id of the loadMacro command</directive>
<directive kind="copyDeclaration"> *  that loaded the Macro.</directive>
<directive kind="copyDeclaration"> */</directive>
<member name="cmdIdSuffix" type="nonBasic" nonBasicTypeName="rapid::String64"/>
<directive kind="copyDeclaration">/** Name of subsystem to which cmdName belongs. */</directive>
<member name="subsysName" type="nonBasic" nonBasicTypeName="rapid::String32"/>
<directive kind="copyDeclaration">/** Data type and value of the arguments for this particular command. */</directive>
<member name="arguments" type="nonBasic" nonBasicTypeName="rapid::ParameterSequence16"/>
<directive kind="copyDeclaration">/** Data type and value for any metaData fields contained in the MacroConfig. */</directive>
<member name="metaData" type="nonBasic" nonBasicTypeName="rapid::ParameterSequence16"/>
</struct>
<typedef name="MacroCommandSequence128" sequenceMaxLength="128" type="nonBasic" nonBasicTypeName="rapid::MacroCommand"/>
<directive kind="copyCDeclaration">class MacroConfigTypeSupport;</directive>
<directive kind="copyCDeclaration">class MacroConfigDataWriter;</directive>
<directive kind="copyCDeclaration">class MacroConfigDataReader;</directive>
<directive kind="copyCDeclaration">struct MacroConfigSeq;</directive>
<valuetype name="MacroConfig" baseClass="rapid::Message" typeModifier="none">
<directive kind="copyCDeclaration">#if RTI_DDS_VERSION_MAJOR &lt; 4 || (RTI_DDS_VERSION_MAJOR == 4  &amp;&amp; RTI_DDS_VERSION_MINOR &lt; 5) || (RTI_DDS_VERSION_MAJOR == 4  &amp;&amp; RTI_DDS_VERSION_MINOR  == 5 &amp;&amp; RTI_DDS_VERSION_RELEASE != 'f' )</directive>
<directive kind="copyCDeclaration">typedef MacroConfigTypeSupport TypeSupport;</directive>
<directive kind="copyCDeclaration">typedef MacroConfigDataWriter DataWriter;</directive>
<directive kind="copyCDeclaration">typedef MacroConfigDataReader DataReader;</directive>
<directive kind="copyCDeclaration">typedef MacroConfigSeq Seq;</directive>
<directive kind="copyCDeclaration">#endif</directive>
<directive kind="copyCDeclaration">typedef MacroConfig Type;</directive>
<directive kind="copyDeclaration">/** Name of this macro. */</directive>
<member name="name" type="nonBasic" nonBasicTypeName="rapid::String64" visibility="public" key="true"/>
<directive kind="copyDeclaration">/** The commands that are put onto the Queue when this macro is loaded. */</directive>
<member name="commands" type="nonBasic" nonBasicTypeName="rapid::MacroCommandSequence128" visibility="public"/>
<directive kind="copyDeclaration">/** Metadata for the entire plan */</directive>
<member name="metaData" type="nonBasic" nonBasicTypeName="rapid::KeyTypeValueSequence16" visibility="public"/>
<directive kind="copyDeclaration">/** Metadata fields found in each MacroCommnad */</directive>
<member name="commandMetaDataSpec" type="nonBasic" nonBasicTypeName="rapid::KeyTypeSequence16" visibility="public"/>
</valuetype>
</module>
</types>
