<?xml version="1.0" encoding="UTF-8"?>
<types xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="/opt/rti/ndds.5.1.0/scripts/../resource/rtiddsgen/schema/rti_dds_topic_types.xsd">
<include file="Message.xml"/>
<module name="rapid">
<directive kind="copyDeclaration">/**</directive>
<directive kind="copyDeclaration"> * Status of the command paired with this Ack.</directive>
<directive kind="copyDeclaration"> * &lt;ul&gt;</directive>
<directive kind="copyDeclaration"> *   &lt;li&gt;ACK_QUEUED: Sent by Sequencer when queueing Tasks.</directive>
<directive kind="copyDeclaration"> *   &lt;li&gt;ACK_EXECUTING: Command has been started by the Bridge.</directive>
<directive kind="copyDeclaration"> *   &lt;li&gt;ACK_REQUEUED: Only sent when a command in the ActiveQueue and a PAUSE is sent;</directive>
<directive kind="copyDeclaration"> *                     command is REQUEUED in the PendingQueue preempting the next command</directive>
<directive kind="copyDeclaration"> *                     in the PendingQueue</directive>
<directive kind="copyDeclaration"> *   &lt;li&gt;ACK_COMPLETED: Sent when command is done.</directive>
<directive kind="copyDeclaration"> * &lt;/ul&gt;</directive>
<directive kind="copyDeclaration"> */</directive>
<enum name="AckStatus">
<enumerator name="ACK_QUEUED"/>
<enumerator name="ACK_EXECUTING"/>
<enumerator name="ACK_REQUEUED"/>
<enumerator name="ACK_COMPLETED"/>
</enum>
<directive kind="copyDeclaration">/**</directive>
<directive kind="copyDeclaration"> * This status is sent along when it has completed</directive>
<directive kind="copyDeclaration"> * &lt;ul&gt;</directive>
<directive kind="copyDeclaration"> *   &lt;li&gt;ACK_COMPLETED_NOT: Task has not completed yet.</directive>
<directive kind="copyDeclaration"> *   &lt;li&gt;ACK_COMPLETED_OK: Successful completion.</directive>
<directive kind="copyDeclaration"> *   &lt;li&gt;ACK_COMPLETED_BAD_SYNTAX: Command not recognized, bad parameters, etc.</directive>
<directive kind="copyDeclaration"> *   &lt;li&gt;ACK_COMPLETED_EXEC_FAILED: Failed to complete.</directive>
<directive kind="copyDeclaration"> *   &lt;li&gt;ACK_COMPLETED_CANCELED: Canceled from queue.</directive>
<directive kind="copyDeclaration"> * &lt;/ul&gt;</directive>
<directive kind="copyDeclaration"> */</directive>
<enum name="AckCompletedStatus">
<enumerator name="ACK_COMPLETED_NOT"/>
<enumerator name="ACK_COMPLETED_OK"/>
<enumerator name="ACK_COMPLETED_BAD_SYNTAX"/>
<enumerator name="ACK_COMPLETED_EXEC_FAILED"/>
<enumerator name="ACK_COMPLETED_CANCELED"/>
</enum>
<directive kind="copyCDeclaration">class AckTypeSupport;</directive>
<directive kind="copyCDeclaration">class AckDataWriter;</directive>
<directive kind="copyCDeclaration">class AckDataReader;</directive>
<directive kind="copyCDeclaration">struct AckSeq;</directive>
<directive kind="copyDeclaration">/**</directive>
<directive kind="copyDeclaration"> * Ack is a Message that sends an acknowledgement of commands received.</directive>
<directive kind="copyDeclaration"> */</directive>
<valuetype name="Ack" baseClass="rapid::Message" typeModifier="none">
<directive kind="copyCDeclaration">#if RTI_DDS_VERSION_MAJOR &lt; 4 || (RTI_DDS_VERSION_MAJOR == 4  &amp;&amp; RTI_DDS_VERSION_MINOR &lt; 5) || (RTI_DDS_VERSION_MAJOR == 4  &amp;&amp; RTI_DDS_VERSION_MINOR  == 5 &amp;&amp; RTI_DDS_VERSION_RELEASE != 'f' )</directive>
<directive kind="copyCDeclaration">typedef AckTypeSupport TypeSupport;</directive>
<directive kind="copyCDeclaration">typedef AckDataWriter DataWriter;</directive>
<directive kind="copyCDeclaration">typedef AckDataReader DataReader;</directive>
<directive kind="copyCDeclaration">typedef AckSeq Seq;</directive>
<directive kind="copyCDeclaration">#endif</directive>
<directive kind="copyCDeclaration">typedef Ack Type;</directive>
<directive kind="copyDeclaration">/** Command identifier of command being acknowledged. */</directive>
<member name="cmdId" type="nonBasic" nonBasicTypeName="rapid::String64" visibility="public" key="true"/>
<directive kind="copyDeclaration">/** @see AckStatus. */</directive>
<member name="status" type="nonBasic" nonBasicTypeName="rapid::AckStatus" visibility="public"/>
<directive kind="copyDeclaration">/** Details how the task completed. */</directive>
<member name="completedStatus" type="nonBasic" nonBasicTypeName="rapid::AckCompletedStatus" visibility="public"/>
<directive kind="copyDeclaration">/** Message details any exceptions made during Ack transition. Analogous to exception message string. */</directive>
<member name="message" type="nonBasic" nonBasicTypeName="rapid::String128" visibility="public"/>
</valuetype>
</module>
</types>
